@import '../../styles/theme/default.less';

@spin-prefix-cls: ~"@{primary-name}-spin";
@icon-prefix-cls: ~"@{primary-name}-icon";

.@{spin-prefix-cls} {
  position: relative;
  display: inline-block;

  &-container {
    display: block;
    position: relative;
    .@{spin-prefix-cls}-nested-loading {
      position: absolute;
      top: 50%;
      left: 50%;
      z-index: 6;
      transform: translate(-50%, -50%)
    }
    &::before {
      position: absolute;
      content: '';
      top: 0;
      left: 0;
      width: 0;
      height: 0;
      z-index: 5;
      overflow: hidden;
      opacity: 0;
      background: #fff;
      transition: opacity .3s;
    } 
  }

  &-loading-container {
    &::before {
      opacity: .5;
      width: 100%;
      height: 100%;
    } 
  }

  &-spin-container {
    width: 36px;
    height: 36px;
    font-size: 36px;
    .@{icon-prefix-cls} {
      font-size: 36px;
    }
    position: relative;
    margin: 0 auto;
    display: flex;
    justify-content: center;
    align-items: center;
  }
  &-tip {
    margin-top: 4px;
    text-shadow: 0 1px 2px #fff;
    color: @primary-color;
    font-size: @font-size-small;
    text-align: center;
  }
  &-large {
    .@{spin-prefix-cls}-spin-container {
      width: 48px;
      height: 48px;
      font-size: 48px;
      .@{icon-prefix-cls} {
        font-size: 48px;
      }
    }
  }
  &-small {
    .@{spin-prefix-cls}-spin-container {
      width: 24px;
      height: 24px;
      font-size: 24px;
      .@{icon-prefix-cls} {
        font-size: 24px;
      }
    }
  }

  &-default-spin {
    display: inline-block;
    width: 100%;
    height: 100%;
    position: relative;
    margin: 0;
    span {
      width: 100%;
      height: 100%;
      position: absolute;
      left: 0;
      top: 0;

      &::before {
        content: '';
        display: block;
        margin: 0 auto;
        width: 15%;
        height: 15%;
        background-color: @primary-color;
        border-radius: 100%;
      }
    }
  }

}
.make-classes(@i: 0) when (@i < 12) {
  // 依次循环
  .make-classes(@i + 1);
  // 模版
  @deg: @i*30deg;
  @delay: -1.2s + @i*0.1s;
  .@{spin-prefix-cls}-sk-circle@{i} {
    transform: rotate(@deg);
    &::before {
      animation: sk-circleBounceDelay 1.2s infinite @delay ease-in-out;
    }
  }
}

.make-classes();

@keyframes sk-circleBounceDelay {
  0%,
  80%,
  100% {
    transform: scale(0);
  }

  40% {
    transform: scale(1);
  }
}